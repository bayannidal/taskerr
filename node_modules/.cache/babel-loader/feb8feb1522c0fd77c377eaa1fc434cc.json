{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"./authService\"; //Get user from localStorage\n\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\nexport const register = createAsyncThunk('auth/register', async (user, thunkApi) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkApi.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = '';\n    }\n  },\n  extraReducers: () => {}\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/bayannidal/Coding Area/Redux/my-app/src/features/auth/authSlice.js"],"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","register","thunkApi","error","response","data","toString","rejectWithValue","authSlice","name","reducers","reset","state","extraReducers","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;AAEA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,MAAMC,YAAY,GAAG;AACjBL,EAAAA,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,IADH;AAEjBM,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE,KAHM;AAIjBC,EAAAA,SAAS,EAAE,KAJM;AAKjBC,EAAAA,OAAO,EAAE;AALQ,CAArB;AAQA,OAAO,MAAMC,QAAQ,GAAGZ,gBAAgB,CAAC,eAAD,EAAkB,OAAOE,IAAP,EAAaW,QAAb,KAA0B;AAChF,MAAI;AACA,WAAO,MAAMZ,WAAW,CAACW,QAAZ,CAAqBV,IAArB,CAAb;AACH,GAFD,CAEE,OAAOY,KAAP,EAAc;AACZ,UAAMH,OAAO,GAAIG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,IAAjC,IAAyCF,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBL,OAA7D,IAAwEG,KAAK,CAACH,OAA9E,IAAyFG,KAAK,CAACG,QAAN,EAA1G;AACA,WAAOJ,QAAQ,CAACK,eAAT,CAAyBP,OAAzB,CAAP;AAEH;AACJ,CARuC,CAAjC;AAUP,OAAO,MAAMQ,SAAS,GAAGpB,WAAW,CAAC;AACjCqB,EAAAA,IAAI,EAAE,MAD2B;AAEjCb,EAAAA,YAFiC;AAGjCc,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAGC,KAAD,IAAW;AACdA,MAAAA,KAAK,CAACb,SAAN,GAAkB,KAAlB;AACAa,MAAAA,KAAK,CAACf,OAAN,GAAgB,KAAhB;AACAe,MAAAA,KAAK,CAACd,SAAN,GAAkB,KAAlB;AACAc,MAAAA,KAAK,CAACZ,OAAN,GAAgB,EAAhB;AACH;AANK,GAHuB;AAWjCa,EAAAA,aAAa,EAAE,MAAM,CAEpB;AAbgC,CAAD,CAA7B;AAeP,OAAO,MAAM;AAAEF,EAAAA;AAAF,IAAYH,SAAS,CAACM,OAA5B;AACP,eAAeN,SAAS,CAACO,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"./authService\";\n//Get user from localStorage\n\nconst user = JSON.parse(localStorage.getItem('user'))\nconst initialState = {\n    user: user ? user : null,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: ''\n}\n\nexport const register = createAsyncThunk('auth/register', async (user, thunkApi) => {\n    try {\n        return await authService.register(user)\n    } catch (error) {\n        const message = (error.response && error.response.data && error.response.data.message || error.message || error.toString())\n        return thunkApi.rejectWithValue(message)\n\n    }\n})\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        reset: (state) => {\n            state.isLoading = false\n            state.isError = false\n            state.isSuccess = false\n            state.message = ''\n        },\n    },\n    extraReducers: () => {\n\n    },\n})\nexport const { reset } = authSlice.actions\nexport default authSlice.reducer"]},"metadata":{},"sourceType":"module"}